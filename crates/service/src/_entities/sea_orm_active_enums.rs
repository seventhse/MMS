//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "actions")]
pub enum Actions {
    #[sea_orm(string_value = "created")]
    Created,
    #[sea_orm(string_value = "removed")]
    Removed,
    #[sea_orm(string_value = "updated")]
    Updated,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "status")]
pub enum Status {
    #[sea_orm(string_value = "active")]
    Active,
    #[sea_orm(string_value = "inactive")]
    Inactive,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "target_types")]
pub enum TargetTypes {
    #[sea_orm(string_value = "role")]
    Role,
    #[sea_orm(string_value = "team")]
    Team,
    #[sea_orm(string_value = "user")]
    User,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "team_user_roles")]
pub enum TeamUserRoles {
    #[sea_orm(string_value = "Admin")]
    Admin,
    #[sea_orm(string_value = "Guest")]
    Guest,
    #[sea_orm(string_value = "Manager")]
    Manager,
    #[sea_orm(string_value = "Member")]
    Member,
    #[sea_orm(string_value = "Owner")]
    Owner,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "team_user_status")]
pub enum TeamUserStatus {
    #[sea_orm(string_value = "joined")]
    Joined,
    #[sea_orm(string_value = "lefted")]
    Lefted,
}
